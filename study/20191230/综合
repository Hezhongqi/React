1.数据是单一数据源
2.数据流是自上而下的
3.父组件------>子组件
    ---数据源定义在父组件中，比如app.js
    ---子组件把数据传给父组件，回调函数
    ---传方法：onAddComment={this.addComment}
4.状态提升
    ---将共享的状态提升到最近的父组件进行管理
5.单向数据流
    ---自上而下，往往把数据源定义在父组件中，以及相关操作
    ---与双向绑定区别：更容易定位bug以及通过某种逻辑拒绝输入
6.什么时候用函数形式表示？
    ---没有生命周期，没有state,只接受props
7.循环列表，不要忘记key
8.const state = {
          comments:['a']
          }
  ---const {comments} = this.state 可以获取

9.细化组件，达到复用组件的效果
10.setState 是异步的
    ---保证内部的一致性
        ----在 React 中 this.state 和 this.props 都是异步更新的
        ----更愿意保证内部的一致性和状态提升的安全性，而不总是追求代码的简洁性
    ---性能优化
        ----依据不同的调用源，给不同的 setState() 调用分配不同的优先级。调用源包括事件处理、网络请求、动画等
    ---更多的可能性

11. () => <li>abc</li> 等同于 () => { return <li>abc</li> }