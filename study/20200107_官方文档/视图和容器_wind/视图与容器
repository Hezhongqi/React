1.我们对业务中的自定义组件进行了 基于行为边界 的划分
名称	  物理路径	        特征
路由组件	  /routes	   所有包含路由行为的组件。换句话说，只要在组件内使用了 <Route> / <Switch> / <Redirect> 等和路由相关的 React-Router 组件，都应当归结为 路由组件
视图组件 /components	   所有 可复用 的视图级别的组件。负责进行 视图 级别的抽象，建议 定义为受控组件，尽量不在内部使用 state 处理逻辑
容器组件	/containers	   所有 需要和数据模型进行交互 的 可复用 的组件，负责将具体的数据源或数据行为映射到视图组件的属性中。换句话说，只要使用了 connect 高阶组件，并且这个组件本身在应用级别 可被复用 ，都应当归结为 容器组件

举个例子：用户注册和编辑
1.需求初步抽象

2.模块拆分分析
    表单可以和数据行为剥离开，抽象成视图
    不同的数据行为：容器组件，和视图组件进行属性映射
    访问通过路由映射到容器上
3.写代码顺序：
    1.编写视图组件
    2.设计数据接口，相当于service层
    3.数据模型，相当于控制层
    4.设计对外接口，selector 主要针对state,暴露state
    5.结合数据模型和视图组件，生成容器组件